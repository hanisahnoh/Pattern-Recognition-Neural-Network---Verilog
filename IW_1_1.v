// -------------------------------------------------------------
// 
// File Name: F:\Users\user\Downloads\fyp_upm-2\fyp_upm\codes_cacamerba\FYP\work\simulink_NN_relu\untitled\IW_1_1.v
// Created: 2020-08-17 20:06:13
// 
// Generated by MATLAB 9.0 and HDL Coder 3.8
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: IW_1_1
// Source Path: untitled/Pattern Recognition Neural Network/Layer 1/IW{1,1}
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module IW_1_1
          (
           pd_1_1_0,
           pd_1_1_1,
           pd_1_1_2,
           pd_1_1_3,
           pd_1_1_4,
           pd_1_1_5,
           pd_1_1_6,
           pd_1_1_7,
           pd_1_1_8,
           pd_1_1_9,
           pd_1_1_10,
           pd_1_1_11,
           pd_1_1_12,
           pd_1_1_13,
           pd_1_1_14,
           pd_1_1_15,
           pd_1_1_16,
           pd_1_1_17,
           pd_1_1_18,
           pd_1_1_19,
           pd_1_1_20,
           pd_1_1_21,
           pd_1_1_22,
           pd_1_1_23,
           pd_1_1_24,
           pd_1_1_25,
           pd_1_1_26,
           pd_1_1_27,
           pd_1_1_28,
           pd_1_1_29,
           pd_1_1_30,
           pd_1_1_31,
           pd_1_1_32,
           pd_1_1_33,
           pd_1_1_34,
           pd_1_1_35,
           pd_1_1_36,
           pd_1_1_37,
           pd_1_1_38,
           pd_1_1_39,
           pd_1_1_40,
           pd_1_1_41,
           pd_1_1_42,
           pd_1_1_43,
           pd_1_1_44,
           pd_1_1_45,
           pd_1_1_46,
           pd_1_1_47,
           pd_1_1_48,
           pd_1_1_49,
           pd_1_1_50,
           pd_1_1_51,
           pd_1_1_52,
           pd_1_1_53,
           pd_1_1_54,
           pd_1_1_55,
           pd_1_1_56,
           pd_1_1_57,
           pd_1_1_58,
           pd_1_1_59,
           pd_1_1_60,
           pd_1_1_61,
           pd_1_1_62,
           pd_1_1_63,
           pd_1_1_64,
           pd_1_1_65,
           pd_1_1_66,
           pd_1_1_67,
           pd_1_1_68,
           pd_1_1_69,
           pd_1_1_70,
           pd_1_1_71,
           pd_1_1_72,
           pd_1_1_73,
           pd_1_1_74,
           pd_1_1_75,
           pd_1_1_76,
           pd_1_1_77,
           pd_1_1_78,
           pd_1_1_79,
           pd_1_1_80,
           pd_1_1_81,
           pd_1_1_82,
           pd_1_1_83,
           pd_1_1_84,
           pd_1_1_85,
           pd_1_1_86,
           pd_1_1_87,
           pd_1_1_88,
           pd_1_1_89,
           pd_1_1_90,
           pd_1_1_91,
           pd_1_1_92,
           iz_1_1
          );


  input   [63:0] pd_1_1_0;  // double
  input   [63:0] pd_1_1_1;  // double
  input   [63:0] pd_1_1_2;  // double
  input   [63:0] pd_1_1_3;  // double
  input   [63:0] pd_1_1_4;  // double
  input   [63:0] pd_1_1_5;  // double
  input   [63:0] pd_1_1_6;  // double
  input   [63:0] pd_1_1_7;  // double
  input   [63:0] pd_1_1_8;  // double
  input   [63:0] pd_1_1_9;  // double
  input   [63:0] pd_1_1_10;  // double
  input   [63:0] pd_1_1_11;  // double
  input   [63:0] pd_1_1_12;  // double
  input   [63:0] pd_1_1_13;  // double
  input   [63:0] pd_1_1_14;  // double
  input   [63:0] pd_1_1_15;  // double
  input   [63:0] pd_1_1_16;  // double
  input   [63:0] pd_1_1_17;  // double
  input   [63:0] pd_1_1_18;  // double
  input   [63:0] pd_1_1_19;  // double
  input   [63:0] pd_1_1_20;  // double
  input   [63:0] pd_1_1_21;  // double
  input   [63:0] pd_1_1_22;  // double
  input   [63:0] pd_1_1_23;  // double
  input   [63:0] pd_1_1_24;  // double
  input   [63:0] pd_1_1_25;  // double
  input   [63:0] pd_1_1_26;  // double
  input   [63:0] pd_1_1_27;  // double
  input   [63:0] pd_1_1_28;  // double
  input   [63:0] pd_1_1_29;  // double
  input   [63:0] pd_1_1_30;  // double
  input   [63:0] pd_1_1_31;  // double
  input   [63:0] pd_1_1_32;  // double
  input   [63:0] pd_1_1_33;  // double
  input   [63:0] pd_1_1_34;  // double
  input   [63:0] pd_1_1_35;  // double
  input   [63:0] pd_1_1_36;  // double
  input   [63:0] pd_1_1_37;  // double
  input   [63:0] pd_1_1_38;  // double
  input   [63:0] pd_1_1_39;  // double
  input   [63:0] pd_1_1_40;  // double
  input   [63:0] pd_1_1_41;  // double
  input   [63:0] pd_1_1_42;  // double
  input   [63:0] pd_1_1_43;  // double
  input   [63:0] pd_1_1_44;  // double
  input   [63:0] pd_1_1_45;  // double
  input   [63:0] pd_1_1_46;  // double
  input   [63:0] pd_1_1_47;  // double
  input   [63:0] pd_1_1_48;  // double
  input   [63:0] pd_1_1_49;  // double
  input   [63:0] pd_1_1_50;  // double
  input   [63:0] pd_1_1_51;  // double
  input   [63:0] pd_1_1_52;  // double
  input   [63:0] pd_1_1_53;  // double
  input   [63:0] pd_1_1_54;  // double
  input   [63:0] pd_1_1_55;  // double
  input   [63:0] pd_1_1_56;  // double
  input   [63:0] pd_1_1_57;  // double
  input   [63:0] pd_1_1_58;  // double
  input   [63:0] pd_1_1_59;  // double
  input   [63:0] pd_1_1_60;  // double
  input   [63:0] pd_1_1_61;  // double
  input   [63:0] pd_1_1_62;  // double
  input   [63:0] pd_1_1_63;  // double
  input   [63:0] pd_1_1_64;  // double
  input   [63:0] pd_1_1_65;  // double
  input   [63:0] pd_1_1_66;  // double
  input   [63:0] pd_1_1_67;  // double
  input   [63:0] pd_1_1_68;  // double
  input   [63:0] pd_1_1_69;  // double
  input   [63:0] pd_1_1_70;  // double
  input   [63:0] pd_1_1_71;  // double
  input   [63:0] pd_1_1_72;  // double
  input   [63:0] pd_1_1_73;  // double
  input   [63:0] pd_1_1_74;  // double
  input   [63:0] pd_1_1_75;  // double
  input   [63:0] pd_1_1_76;  // double
  input   [63:0] pd_1_1_77;  // double
  input   [63:0] pd_1_1_78;  // double
  input   [63:0] pd_1_1_79;  // double
  input   [63:0] pd_1_1_80;  // double
  input   [63:0] pd_1_1_81;  // double
  input   [63:0] pd_1_1_82;  // double
  input   [63:0] pd_1_1_83;  // double
  input   [63:0] pd_1_1_84;  // double
  input   [63:0] pd_1_1_85;  // double
  input   [63:0] pd_1_1_86;  // double
  input   [63:0] pd_1_1_87;  // double
  input   [63:0] pd_1_1_88;  // double
  input   [63:0] pd_1_1_89;  // double
  input   [63:0] pd_1_1_90;  // double
  input   [63:0] pd_1_1_91;  // double
  input   [63:0] pd_1_1_92;  // double
  output  [63:0] iz_1_1;  // double


  real IW_1_1_1_out1 [0:92];  // double [93]
  wire [63:0] dotprod1_out1;  // ufix64


  // <S7>/IW{1,1}(1,:)'
  initial IW_1_1_1_out1[0] = 0.93486535647338753;
  initial IW_1_1_1_out1[1] = -0.46106182825944009;
  initial IW_1_1_1_out1[2] = 0.44752610692206507;
  initial IW_1_1_1_out1[3] = -0.31677201032471747;
  initial IW_1_1_1_out1[4] = 0.43494550689161005;
  initial IW_1_1_1_out1[5] = 0.397088274954061;
  initial IW_1_1_1_out1[6] = -0.84247312458904344;
  initial IW_1_1_1_out1[7] = -0.47248446706749514;
  initial IW_1_1_1_out1[8] = -0.58354923036645046;
  initial IW_1_1_1_out1[9] = 0.29739982532635884;
  initial IW_1_1_1_out1[10] = 0.648976125556235;
  initial IW_1_1_1_out1[11] = -0.35358844722376265;
  initial IW_1_1_1_out1[12] = 0.51834868126852363;
  initial IW_1_1_1_out1[13] = 0.3081638479773634;
  initial IW_1_1_1_out1[14] = -1.0297230854816162;
  initial IW_1_1_1_out1[15] = 0.16141476496844223;
  initial IW_1_1_1_out1[16] = -0.26730387206866457;
  initial IW_1_1_1_out1[17] = 0.79133932792631345;
  initial IW_1_1_1_out1[18] = -1.0395661902723476;
  initial IW_1_1_1_out1[19] = -0.11555445527915209;
  initial IW_1_1_1_out1[20] = -0.1896118726103431;
  initial IW_1_1_1_out1[21] = -0.11434637923473295;
  initial IW_1_1_1_out1[22] = 0.50870487315043345;
  initial IW_1_1_1_out1[23] = -0.38437897341621591;
  initial IW_1_1_1_out1[24] = 0.5411273173693395;
  initial IW_1_1_1_out1[25] = -0.0872833104956014;
  initial IW_1_1_1_out1[26] = -0.96162567783348929;
  initial IW_1_1_1_out1[27] = -0.6846056574650623;
  initial IW_1_1_1_out1[28] = 0.40121439591412839;
  initial IW_1_1_1_out1[29] = -0.098552312416382987;
  initial IW_1_1_1_out1[30] = -0.74078239212145891;
  initial IW_1_1_1_out1[31] = -0.36168404192866427;
  initial IW_1_1_1_out1[32] = 0.17269688141869485;
  initial IW_1_1_1_out1[33] = -0.65735206732556661;
  initial IW_1_1_1_out1[34] = 0.43718454624691777;
  initial IW_1_1_1_out1[35] = -0.5505636388982883;
  initial IW_1_1_1_out1[36] = 0.80275135875376313;
  initial IW_1_1_1_out1[37] = -0.49030472921964857;
  initial IW_1_1_1_out1[38] = 0.50930172602096313;
  initial IW_1_1_1_out1[39] = -0.63374705449816215;
  initial IW_1_1_1_out1[40] = -0.42410531177279215;
  initial IW_1_1_1_out1[41] = -0.80241778449048917;
  initial IW_1_1_1_out1[42] = 0.17049812133742864;
  initial IW_1_1_1_out1[43] = 0.38130859870308303;
  initial IW_1_1_1_out1[44] = 0.1038849317080861;
  initial IW_1_1_1_out1[45] = -0.13744849278709811;
  initial IW_1_1_1_out1[46] = 0.28793400117143858;
  initial IW_1_1_1_out1[47] = 0.28963012560962537;
  initial IW_1_1_1_out1[48] = 0.3473042033390597;
  initial IW_1_1_1_out1[49] = 0.25441633384858131;
  initial IW_1_1_1_out1[50] = 0.86681133869896843;
  initial IW_1_1_1_out1[51] = -0.60637897023903564;
  initial IW_1_1_1_out1[52] = 0.39462610632476591;
  initial IW_1_1_1_out1[53] = -0.55231776799662047;
  initial IW_1_1_1_out1[54] = -0.78921471679382482;
  initial IW_1_1_1_out1[55] = 0.18274657325947508;
  initial IW_1_1_1_out1[56] = -0.13506888429855041;
  initial IW_1_1_1_out1[57] = -0.1195663028299577;
  initial IW_1_1_1_out1[58] = 0.28464577644101596;
  initial IW_1_1_1_out1[59] = 0.49928438753544258;
  initial IW_1_1_1_out1[60] = -0.34267833813575127;
  initial IW_1_1_1_out1[61] = 0.27996174549166691;
  initial IW_1_1_1_out1[62] = -0.21482436074958974;
  initial IW_1_1_1_out1[63] = 0.63526073576446263;
  initial IW_1_1_1_out1[64] = 0.61773479544379939;
  initial IW_1_1_1_out1[65] = -0.53660773439688636;
  initial IW_1_1_1_out1[66] = 0.17592067766490946;
  initial IW_1_1_1_out1[67] = 0.11227640526415794;
  initial IW_1_1_1_out1[68] = 0.029693900232148442;
  initial IW_1_1_1_out1[69] = 0.6925189519125805;
  initial IW_1_1_1_out1[70] = -0.51296967289117612;
  initial IW_1_1_1_out1[71] = -0.40152749088342526;
  initial IW_1_1_1_out1[72] = -0.79782393432581622;
  initial IW_1_1_1_out1[73] = 0.84705704454281627;
  initial IW_1_1_1_out1[74] = 0.26279167957644362;
  initial IW_1_1_1_out1[75] = -0.06498256624874213;
  initial IW_1_1_1_out1[76] = 0.26000456381040871;
  initial IW_1_1_1_out1[77] = 0.075815846342334223;
  initial IW_1_1_1_out1[78] = 0.28233120212345852;
  initial IW_1_1_1_out1[79] = 0.080920311000729619;
  initial IW_1_1_1_out1[80] = 0.441604251921696;
  initial IW_1_1_1_out1[81] = 0.049009294890721693;
  initial IW_1_1_1_out1[82] = 1.0089992535004608;
  initial IW_1_1_1_out1[83] = -0.50550041165563142;
  initial IW_1_1_1_out1[84] = -0.71946937477843653;
  initial IW_1_1_1_out1[85] = -0.71516322122571663;
  initial IW_1_1_1_out1[86] = -0.82790556693149087;
  initial IW_1_1_1_out1[87] = -0.18031613195283649;
  initial IW_1_1_1_out1[88] = -0.11682514038090304;
  initial IW_1_1_1_out1[89] = -0.28194832780681772;
  initial IW_1_1_1_out1[90] = 0.54253575941762844;
  initial IW_1_1_1_out1[91] = 0.30658331747698531;
  initial IW_1_1_1_out1[92] = 0.57809053045654757;



  // <S7>/dotprod1
  // 
  // <S7>/Mux
  dotprod1   u_dotprod1   (.In1_0($realtobits(IW_1_1_1_out1[0])),  // double
                           .In1_1($realtobits(IW_1_1_1_out1[1])),  // double
                           .In1_2($realtobits(IW_1_1_1_out1[2])),  // double
                           .In1_3($realtobits(IW_1_1_1_out1[3])),  // double
                           .In1_4($realtobits(IW_1_1_1_out1[4])),  // double
                           .In1_5($realtobits(IW_1_1_1_out1[5])),  // double
                           .In1_6($realtobits(IW_1_1_1_out1[6])),  // double
                           .In1_7($realtobits(IW_1_1_1_out1[7])),  // double
                           .In1_8($realtobits(IW_1_1_1_out1[8])),  // double
                           .In1_9($realtobits(IW_1_1_1_out1[9])),  // double
                           .In1_10($realtobits(IW_1_1_1_out1[10])),  // double
                           .In1_11($realtobits(IW_1_1_1_out1[11])),  // double
                           .In1_12($realtobits(IW_1_1_1_out1[12])),  // double
                           .In1_13($realtobits(IW_1_1_1_out1[13])),  // double
                           .In1_14($realtobits(IW_1_1_1_out1[14])),  // double
                           .In1_15($realtobits(IW_1_1_1_out1[15])),  // double
                           .In1_16($realtobits(IW_1_1_1_out1[16])),  // double
                           .In1_17($realtobits(IW_1_1_1_out1[17])),  // double
                           .In1_18($realtobits(IW_1_1_1_out1[18])),  // double
                           .In1_19($realtobits(IW_1_1_1_out1[19])),  // double
                           .In1_20($realtobits(IW_1_1_1_out1[20])),  // double
                           .In1_21($realtobits(IW_1_1_1_out1[21])),  // double
                           .In1_22($realtobits(IW_1_1_1_out1[22])),  // double
                           .In1_23($realtobits(IW_1_1_1_out1[23])),  // double
                           .In1_24($realtobits(IW_1_1_1_out1[24])),  // double
                           .In1_25($realtobits(IW_1_1_1_out1[25])),  // double
                           .In1_26($realtobits(IW_1_1_1_out1[26])),  // double
                           .In1_27($realtobits(IW_1_1_1_out1[27])),  // double
                           .In1_28($realtobits(IW_1_1_1_out1[28])),  // double
                           .In1_29($realtobits(IW_1_1_1_out1[29])),  // double
                           .In1_30($realtobits(IW_1_1_1_out1[30])),  // double
                           .In1_31($realtobits(IW_1_1_1_out1[31])),  // double
                           .In1_32($realtobits(IW_1_1_1_out1[32])),  // double
                           .In1_33($realtobits(IW_1_1_1_out1[33])),  // double
                           .In1_34($realtobits(IW_1_1_1_out1[34])),  // double
                           .In1_35($realtobits(IW_1_1_1_out1[35])),  // double
                           .In1_36($realtobits(IW_1_1_1_out1[36])),  // double
                           .In1_37($realtobits(IW_1_1_1_out1[37])),  // double
                           .In1_38($realtobits(IW_1_1_1_out1[38])),  // double
                           .In1_39($realtobits(IW_1_1_1_out1[39])),  // double
                           .In1_40($realtobits(IW_1_1_1_out1[40])),  // double
                           .In1_41($realtobits(IW_1_1_1_out1[41])),  // double
                           .In1_42($realtobits(IW_1_1_1_out1[42])),  // double
                           .In1_43($realtobits(IW_1_1_1_out1[43])),  // double
                           .In1_44($realtobits(IW_1_1_1_out1[44])),  // double
                           .In1_45($realtobits(IW_1_1_1_out1[45])),  // double
                           .In1_46($realtobits(IW_1_1_1_out1[46])),  // double
                           .In1_47($realtobits(IW_1_1_1_out1[47])),  // double
                           .In1_48($realtobits(IW_1_1_1_out1[48])),  // double
                           .In1_49($realtobits(IW_1_1_1_out1[49])),  // double
                           .In1_50($realtobits(IW_1_1_1_out1[50])),  // double
                           .In1_51($realtobits(IW_1_1_1_out1[51])),  // double
                           .In1_52($realtobits(IW_1_1_1_out1[52])),  // double
                           .In1_53($realtobits(IW_1_1_1_out1[53])),  // double
                           .In1_54($realtobits(IW_1_1_1_out1[54])),  // double
                           .In1_55($realtobits(IW_1_1_1_out1[55])),  // double
                           .In1_56($realtobits(IW_1_1_1_out1[56])),  // double
                           .In1_57($realtobits(IW_1_1_1_out1[57])),  // double
                           .In1_58($realtobits(IW_1_1_1_out1[58])),  // double
                           .In1_59($realtobits(IW_1_1_1_out1[59])),  // double
                           .In1_60($realtobits(IW_1_1_1_out1[60])),  // double
                           .In1_61($realtobits(IW_1_1_1_out1[61])),  // double
                           .In1_62($realtobits(IW_1_1_1_out1[62])),  // double
                           .In1_63($realtobits(IW_1_1_1_out1[63])),  // double
                           .In1_64($realtobits(IW_1_1_1_out1[64])),  // double
                           .In1_65($realtobits(IW_1_1_1_out1[65])),  // double
                           .In1_66($realtobits(IW_1_1_1_out1[66])),  // double
                           .In1_67($realtobits(IW_1_1_1_out1[67])),  // double
                           .In1_68($realtobits(IW_1_1_1_out1[68])),  // double
                           .In1_69($realtobits(IW_1_1_1_out1[69])),  // double
                           .In1_70($realtobits(IW_1_1_1_out1[70])),  // double
                           .In1_71($realtobits(IW_1_1_1_out1[71])),  // double
                           .In1_72($realtobits(IW_1_1_1_out1[72])),  // double
                           .In1_73($realtobits(IW_1_1_1_out1[73])),  // double
                           .In1_74($realtobits(IW_1_1_1_out1[74])),  // double
                           .In1_75($realtobits(IW_1_1_1_out1[75])),  // double
                           .In1_76($realtobits(IW_1_1_1_out1[76])),  // double
                           .In1_77($realtobits(IW_1_1_1_out1[77])),  // double
                           .In1_78($realtobits(IW_1_1_1_out1[78])),  // double
                           .In1_79($realtobits(IW_1_1_1_out1[79])),  // double
                           .In1_80($realtobits(IW_1_1_1_out1[80])),  // double
                           .In1_81($realtobits(IW_1_1_1_out1[81])),  // double
                           .In1_82($realtobits(IW_1_1_1_out1[82])),  // double
                           .In1_83($realtobits(IW_1_1_1_out1[83])),  // double
                           .In1_84($realtobits(IW_1_1_1_out1[84])),  // double
                           .In1_85($realtobits(IW_1_1_1_out1[85])),  // double
                           .In1_86($realtobits(IW_1_1_1_out1[86])),  // double
                           .In1_87($realtobits(IW_1_1_1_out1[87])),  // double
                           .In1_88($realtobits(IW_1_1_1_out1[88])),  // double
                           .In1_89($realtobits(IW_1_1_1_out1[89])),  // double
                           .In1_90($realtobits(IW_1_1_1_out1[90])),  // double
                           .In1_91($realtobits(IW_1_1_1_out1[91])),  // double
                           .In1_92($realtobits(IW_1_1_1_out1[92])),  // double
                           .In2_0(pd_1_1_0),  // double
                           .In2_1(pd_1_1_1),  // double
                           .In2_2(pd_1_1_2),  // double
                           .In2_3(pd_1_1_3),  // double
                           .In2_4(pd_1_1_4),  // double
                           .In2_5(pd_1_1_5),  // double
                           .In2_6(pd_1_1_6),  // double
                           .In2_7(pd_1_1_7),  // double
                           .In2_8(pd_1_1_8),  // double
                           .In2_9(pd_1_1_9),  // double
                           .In2_10(pd_1_1_10),  // double
                           .In2_11(pd_1_1_11),  // double
                           .In2_12(pd_1_1_12),  // double
                           .In2_13(pd_1_1_13),  // double
                           .In2_14(pd_1_1_14),  // double
                           .In2_15(pd_1_1_15),  // double
                           .In2_16(pd_1_1_16),  // double
                           .In2_17(pd_1_1_17),  // double
                           .In2_18(pd_1_1_18),  // double
                           .In2_19(pd_1_1_19),  // double
                           .In2_20(pd_1_1_20),  // double
                           .In2_21(pd_1_1_21),  // double
                           .In2_22(pd_1_1_22),  // double
                           .In2_23(pd_1_1_23),  // double
                           .In2_24(pd_1_1_24),  // double
                           .In2_25(pd_1_1_25),  // double
                           .In2_26(pd_1_1_26),  // double
                           .In2_27(pd_1_1_27),  // double
                           .In2_28(pd_1_1_28),  // double
                           .In2_29(pd_1_1_29),  // double
                           .In2_30(pd_1_1_30),  // double
                           .In2_31(pd_1_1_31),  // double
                           .In2_32(pd_1_1_32),  // double
                           .In2_33(pd_1_1_33),  // double
                           .In2_34(pd_1_1_34),  // double
                           .In2_35(pd_1_1_35),  // double
                           .In2_36(pd_1_1_36),  // double
                           .In2_37(pd_1_1_37),  // double
                           .In2_38(pd_1_1_38),  // double
                           .In2_39(pd_1_1_39),  // double
                           .In2_40(pd_1_1_40),  // double
                           .In2_41(pd_1_1_41),  // double
                           .In2_42(pd_1_1_42),  // double
                           .In2_43(pd_1_1_43),  // double
                           .In2_44(pd_1_1_44),  // double
                           .In2_45(pd_1_1_45),  // double
                           .In2_46(pd_1_1_46),  // double
                           .In2_47(pd_1_1_47),  // double
                           .In2_48(pd_1_1_48),  // double
                           .In2_49(pd_1_1_49),  // double
                           .In2_50(pd_1_1_50),  // double
                           .In2_51(pd_1_1_51),  // double
                           .In2_52(pd_1_1_52),  // double
                           .In2_53(pd_1_1_53),  // double
                           .In2_54(pd_1_1_54),  // double
                           .In2_55(pd_1_1_55),  // double
                           .In2_56(pd_1_1_56),  // double
                           .In2_57(pd_1_1_57),  // double
                           .In2_58(pd_1_1_58),  // double
                           .In2_59(pd_1_1_59),  // double
                           .In2_60(pd_1_1_60),  // double
                           .In2_61(pd_1_1_61),  // double
                           .In2_62(pd_1_1_62),  // double
                           .In2_63(pd_1_1_63),  // double
                           .In2_64(pd_1_1_64),  // double
                           .In2_65(pd_1_1_65),  // double
                           .In2_66(pd_1_1_66),  // double
                           .In2_67(pd_1_1_67),  // double
                           .In2_68(pd_1_1_68),  // double
                           .In2_69(pd_1_1_69),  // double
                           .In2_70(pd_1_1_70),  // double
                           .In2_71(pd_1_1_71),  // double
                           .In2_72(pd_1_1_72),  // double
                           .In2_73(pd_1_1_73),  // double
                           .In2_74(pd_1_1_74),  // double
                           .In2_75(pd_1_1_75),  // double
                           .In2_76(pd_1_1_76),  // double
                           .In2_77(pd_1_1_77),  // double
                           .In2_78(pd_1_1_78),  // double
                           .In2_79(pd_1_1_79),  // double
                           .In2_80(pd_1_1_80),  // double
                           .In2_81(pd_1_1_81),  // double
                           .In2_82(pd_1_1_82),  // double
                           .In2_83(pd_1_1_83),  // double
                           .In2_84(pd_1_1_84),  // double
                           .In2_85(pd_1_1_85),  // double
                           .In2_86(pd_1_1_86),  // double
                           .In2_87(pd_1_1_87),  // double
                           .In2_88(pd_1_1_88),  // double
                           .In2_89(pd_1_1_89),  // double
                           .In2_90(pd_1_1_90),  // double
                           .In2_91(pd_1_1_91),  // double
                           .In2_92(pd_1_1_92),  // double
                           .Out1(dotprod1_out1)  // double
                           );

  assign iz_1_1 = dotprod1_out1;

endmodule  // IW_1_1

